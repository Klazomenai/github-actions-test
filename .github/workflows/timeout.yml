name: Log timeout test

on:
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  build:
    name: Build Dashboards
    runs-on: ubuntu-latest
    timeout-minutes: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Capture Start Time
        run: echo "$(date +%s)" > start_time.txt

      - name: Upload Start Time
        uses: actions/upload-artifact@v4
        with:
          name: start-time
          path: start_time.txt

      - name: Sleep 60 Seconds to Trigger Timeout
        run: sleep 60

      - name: Detect Timeout via API
        if: cancelled()  # Run only if the job was cancelled, i.e. timeout is one possability
        run: |
          JOB_INFO=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}")

          JOB_CONCLUSION=$(echo "$JOB_INFO" | jq -r '.conclusion')
          JOB_STATUS=$(echo "$JOB_INFO" | jq -r '.status')

          echo "Job Conclusion: $JOB_CONCLUSION"
          echo "Job Status: $JOB_STATUS"

          if [[ "$JOB_CONCLUSION" == "cancelled" && "$JOB_STATUS" == "completed" ]]; then
            echo "Possible timeout detected. Verifying logs..."
            LOG_URL=$(echo "$JOB_INFO" | jq -r '.logs_url')

            LOGS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "$LOG_URL")

            if echo "$LOGS" | grep --quiet "maximum execution time"; then
              echo "Confirmed: Job failed due to timeout!"
              exit 1
            else
              echo "Job was cancelled, but not due to a timeout."
              exit 0
            fi
          fi

      - name: Capture End Time
        if: always()
        run: echo "END_TIME=$(date +%s)" >> $GITHUB_ENV

  report:
    name: Report Job Status
    runs-on: ubuntu-latest
    if: always()
    needs:
      - build

    env:
      REPORT_ON_SUCCESS: "false"

    steps:
      - name: Download Start Time
        uses: actions/download-artifact@v4
        with:
          name: start-time
          path: .

      - name: Calculate Total Execution Time
        run: |
          START_TIME=$(cat start_time.txt)
          TOTAL_RUNTIME=$(( $(date +%s) - START_TIME ))
          echo "TOTAL_RUNTIME=$TOTAL_RUNTIME" >> $GITHUB_ENV
          echo "START_TIME: " $START_TIME
          echo "END_TIME: " $END_TIME
          echo "TOTAL_RUNTIME: " $TOTAL_RUNTIME
